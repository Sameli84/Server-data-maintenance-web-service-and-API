package com.example.servermaintenance.course;

import com.example.servermaintenance.account.Account;
import com.example.servermaintenance.interpreter.Interpreter;
import lombok.AllArgsConstructor;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;
import java.util.Comparator;

@Service
@AllArgsConstructor
public class CourseStudentService {
    private final CourseStudentRepository courseStudentRepository;
    private final CourseStudentPartRepository courseStudentPartRepository;

    @Transactional
    public CourseStudent generate(Course course, Account account, long id) {
        // todo: get from repo with order
        var schema = course.getSchemaParts().stream().sorted(Comparator.comparingInt(SchemaPart::getOrder)).toList();
        var courseStudent = new CourseStudent(account, course, id);
        for (SchemaPart part : schema) {
            var courseStudentPart = new CourseStudentPart(courseStudent, part);
            if (!part.isAutogenerated()) {
                courseStudentPart.setData("");
            } else {
                courseStudentPart.setData(Interpreter.eval(part.getGenerationStatement(), id));
            }
            courseStudent.addCourseStudentPart(courseStudentPartRepository.save(courseStudentPart));
        }
        return courseStudentRepository.save(courseStudent);
    }
}
